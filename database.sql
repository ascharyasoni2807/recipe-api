--
-- PostgreSQL database dump
--

-- Dumped from database version 16.3 (Debian 16.3-1.pgdg120+1)
-- Dumped by pg_dump version 16.3 (Debian 16.3-1.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id bigint NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_celery_beat_clockedschedule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_clockedschedule (
    id integer NOT NULL,
    clocked_time timestamp with time zone NOT NULL
);


ALTER TABLE public.django_celery_beat_clockedschedule OWNER TO postgres;

--
-- Name: django_celery_beat_clockedschedule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_celery_beat_clockedschedule ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_celery_beat_clockedschedule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_celery_beat_crontabschedule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_crontabschedule (
    id integer NOT NULL,
    minute character varying(240) NOT NULL,
    hour character varying(96) NOT NULL,
    day_of_week character varying(64) NOT NULL,
    day_of_month character varying(124) NOT NULL,
    month_of_year character varying(64) NOT NULL,
    timezone character varying(63) NOT NULL
);


ALTER TABLE public.django_celery_beat_crontabschedule OWNER TO postgres;

--
-- Name: django_celery_beat_crontabschedule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_celery_beat_crontabschedule ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_celery_beat_crontabschedule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_celery_beat_intervalschedule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_intervalschedule (
    id integer NOT NULL,
    every integer NOT NULL,
    period character varying(24) NOT NULL
);


ALTER TABLE public.django_celery_beat_intervalschedule OWNER TO postgres;

--
-- Name: django_celery_beat_intervalschedule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_celery_beat_intervalschedule ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_celery_beat_intervalschedule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_celery_beat_periodictask; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_periodictask (
    id integer NOT NULL,
    name character varying(200) NOT NULL,
    task character varying(200) NOT NULL,
    args text NOT NULL,
    kwargs text NOT NULL,
    queue character varying(200),
    exchange character varying(200),
    routing_key character varying(200),
    expires timestamp with time zone,
    enabled boolean NOT NULL,
    last_run_at timestamp with time zone,
    total_run_count integer NOT NULL,
    date_changed timestamp with time zone NOT NULL,
    description text NOT NULL,
    crontab_id integer,
    interval_id integer,
    solar_id integer,
    one_off boolean NOT NULL,
    start_time timestamp with time zone,
    priority integer,
    headers text NOT NULL,
    clocked_id integer,
    expire_seconds integer,
    CONSTRAINT django_celery_beat_periodictask_expire_seconds_check CHECK ((expire_seconds >= 0)),
    CONSTRAINT django_celery_beat_periodictask_priority_check CHECK ((priority >= 0)),
    CONSTRAINT django_celery_beat_periodictask_total_run_count_check CHECK ((total_run_count >= 0))
);


ALTER TABLE public.django_celery_beat_periodictask OWNER TO postgres;

--
-- Name: django_celery_beat_periodictask_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_celery_beat_periodictask ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_celery_beat_periodictask_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_celery_beat_periodictasks; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_periodictasks (
    ident smallint NOT NULL,
    last_update timestamp with time zone NOT NULL
);


ALTER TABLE public.django_celery_beat_periodictasks OWNER TO postgres;

--
-- Name: django_celery_beat_solarschedule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_celery_beat_solarschedule (
    id integer NOT NULL,
    event character varying(24) NOT NULL,
    latitude numeric(9,6) NOT NULL,
    longitude numeric(9,6) NOT NULL
);


ALTER TABLE public.django_celery_beat_solarschedule OWNER TO postgres;

--
-- Name: django_celery_beat_solarschedule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_celery_beat_solarschedule ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_celery_beat_solarschedule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_rest_passwordreset_resetpasswordtoken; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_rest_passwordreset_resetpasswordtoken (
    created_at timestamp with time zone NOT NULL,
    key character varying(64) NOT NULL,
    ip_address inet,
    user_agent character varying(512) NOT NULL,
    user_id bigint NOT NULL,
    id integer NOT NULL
);


ALTER TABLE public.django_rest_passwordreset_resetpasswordtoken OWNER TO postgres;

--
-- Name: django_rest_passwordreset_resetpasswordtoken_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_rest_passwordreset_resetpasswordtoken ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_rest_passwordreset_resetpasswordtoken_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: recipe_recipe; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recipe_recipe (
    id bigint NOT NULL,
    picture character varying(100) NOT NULL,
    title character varying(200) NOT NULL,
    "desc" character varying(200) NOT NULL,
    cook_time time without time zone NOT NULL,
    ingredients text NOT NULL,
    procedure text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_id bigint NOT NULL,
    category_id bigint NOT NULL
);


ALTER TABLE public.recipe_recipe OWNER TO postgres;

--
-- Name: recipe_recipe_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.recipe_recipe ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.recipe_recipe_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: recipe_recipecategory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recipe_recipecategory (
    id bigint NOT NULL,
    name character varying(100) NOT NULL
);


ALTER TABLE public.recipe_recipecategory OWNER TO postgres;

--
-- Name: recipe_recipecategory_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.recipe_recipecategory ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.recipe_recipecategory_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: recipe_recipelike; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.recipe_recipelike (
    id bigint NOT NULL,
    created timestamp with time zone NOT NULL,
    recipe_id bigint NOT NULL,
    user_id bigint NOT NULL
);


ALTER TABLE public.recipe_recipelike OWNER TO postgres;

--
-- Name: recipe_recipelike_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.recipe_recipelike ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.recipe_recipelike_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: token_blacklist_blacklistedtoken; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.token_blacklist_blacklistedtoken (
    id bigint NOT NULL,
    blacklisted_at timestamp with time zone NOT NULL,
    token_id bigint NOT NULL
);


ALTER TABLE public.token_blacklist_blacklistedtoken OWNER TO postgres;

--
-- Name: token_blacklist_blacklistedtoken_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.token_blacklist_blacklistedtoken ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.token_blacklist_blacklistedtoken_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: token_blacklist_outstandingtoken; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.token_blacklist_outstandingtoken (
    id bigint NOT NULL,
    token text NOT NULL,
    created_at timestamp with time zone,
    expires_at timestamp with time zone NOT NULL,
    user_id bigint,
    jti character varying(255) NOT NULL
);


ALTER TABLE public.token_blacklist_outstandingtoken OWNER TO postgres;

--
-- Name: token_blacklist_outstandingtoken_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.token_blacklist_outstandingtoken ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.token_blacklist_outstandingtoken_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_customuser; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_customuser (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    email character varying(254) NOT NULL
);


ALTER TABLE public.users_customuser OWNER TO postgres;

--
-- Name: users_customuser_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_customuser_groups (
    id bigint NOT NULL,
    customuser_id bigint NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.users_customuser_groups OWNER TO postgres;

--
-- Name: users_customuser_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users_customuser_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_customuser_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_customuser_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users_customuser ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_customuser_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_customuser_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_customuser_user_permissions (
    id bigint NOT NULL,
    customuser_id bigint NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.users_customuser_user_permissions OWNER TO postgres;

--
-- Name: users_customuser_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users_customuser_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_customuser_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_profile; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_profile (
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    avatar character varying(100) NOT NULL,
    bio character varying(200) NOT NULL
);


ALTER TABLE public.users_profile OWNER TO postgres;

--
-- Name: users_profile_bookmarks; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users_profile_bookmarks (
    id bigint NOT NULL,
    profile_id bigint NOT NULL,
    recipe_id bigint NOT NULL
);


ALTER TABLE public.users_profile_bookmarks OWNER TO postgres;

--
-- Name: users_profile_bookmarks_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users_profile_bookmarks ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_profile_bookmarks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users_profile_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.users_profile ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_profile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add content type	4	add_contenttype
14	Can change content type	4	change_contenttype
15	Can delete content type	4	delete_contenttype
16	Can view content type	4	view_contenttype
17	Can add session	5	add_session
18	Can change session	5	change_session
19	Can delete session	5	delete_session
20	Can view session	5	view_session
21	Can add blacklisted token	6	add_blacklistedtoken
22	Can change blacklisted token	6	change_blacklistedtoken
23	Can delete blacklisted token	6	delete_blacklistedtoken
24	Can view blacklisted token	6	view_blacklistedtoken
25	Can add outstanding token	7	add_outstandingtoken
26	Can change outstanding token	7	change_outstandingtoken
27	Can delete outstanding token	7	delete_outstandingtoken
28	Can view outstanding token	7	view_outstandingtoken
29	Can add Password Reset Token	8	add_resetpasswordtoken
30	Can change Password Reset Token	8	change_resetpasswordtoken
31	Can delete Password Reset Token	8	delete_resetpasswordtoken
32	Can view Password Reset Token	8	view_resetpasswordtoken
33	Can add user	9	add_customuser
34	Can change user	9	change_customuser
35	Can delete user	9	delete_customuser
36	Can view user	9	view_customuser
37	Can add profile	10	add_profile
38	Can change profile	10	change_profile
39	Can delete profile	10	delete_profile
40	Can view profile	10	view_profile
41	Can add recipe	11	add_recipe
42	Can change recipe	11	change_recipe
43	Can delete recipe	11	delete_recipe
44	Can view recipe	11	view_recipe
45	Can add Recipe Category	12	add_recipecategory
46	Can change Recipe Category	12	change_recipecategory
47	Can delete Recipe Category	12	delete_recipecategory
48	Can view Recipe Category	12	view_recipecategory
49	Can add recipe like	13	add_recipelike
50	Can change recipe like	13	change_recipelike
51	Can delete recipe like	13	delete_recipelike
52	Can view recipe like	13	view_recipelike
53	Can add crontab	14	add_crontabschedule
54	Can change crontab	14	change_crontabschedule
55	Can delete crontab	14	delete_crontabschedule
56	Can view crontab	14	view_crontabschedule
57	Can add interval	15	add_intervalschedule
58	Can change interval	15	change_intervalschedule
59	Can delete interval	15	delete_intervalschedule
60	Can view interval	15	view_intervalschedule
61	Can add periodic task	16	add_periodictask
62	Can change periodic task	16	change_periodictask
63	Can delete periodic task	16	delete_periodictask
64	Can view periodic task	16	view_periodictask
65	Can add periodic tasks	17	add_periodictasks
66	Can change periodic tasks	17	change_periodictasks
67	Can delete periodic tasks	17	delete_periodictasks
68	Can view periodic tasks	17	view_periodictasks
69	Can add solar event	18	add_solarschedule
70	Can change solar event	18	change_solarschedule
71	Can delete solar event	18	delete_solarschedule
72	Can view solar event	18	view_solarschedule
73	Can add clocked	19	add_clockedschedule
74	Can change clocked	19	change_clockedschedule
75	Can delete clocked	19	delete_clockedschedule
76	Can view clocked	19	view_clockedschedule
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2024-07-26 06:49:19.000519+00	1	Breakfast	1	[{"added": {}}]	12	1
2	2024-07-26 06:49:29.886369+00	2	Lunch	1	[{"added": {}}]	12	1
3	2024-07-26 06:49:35.984304+00	3	Snacks	1	[{"added": {}}]	12	1
4	2024-07-26 06:49:45.675838+00	4	Appetizer	1	[{"added": {}}]	12	1
5	2024-07-26 06:49:56.193971+00	5	Dinner	1	[{"added": {}}]	12	1
6	2024-07-26 06:50:15.155666+00	6	Soup	1	[{"added": {}}]	12	1
7	2024-07-26 06:50:18.740048+00	7	Dessert	1	[{"added": {}}]	12	1
8	2024-07-26 06:54:15.926938+00	1	Classic Pancakes	1	[{"added": {}}]	11	1
9	2024-07-26 06:55:55.634053+00	2	Avocado Toast with Poached Egg	1	[{"added": {}}]	11	1
10	2024-07-26 06:57:17.014286+00	3	Berry Smoothie Bowl	1	[{"added": {}}]	11	1
11	2024-07-26 06:59:00.5302+00	2	ascharya@gmail.com	1	[{"added": {}}]	9	1
12	2024-07-26 06:59:49.787903+00	3	sanjeev@gmail.com	1	[{"added": {}}]	9	1
13	2024-07-26 07:00:28.640363+00	4	vikas@gmail.com	1	[{"added": {}}]	9	1
14	2024-07-26 07:04:10.948353+00	4	Chocolate Lava Cake	1	[{"added": {}}]	11	1
15	2024-07-26 07:05:46.16039+00	5	Lemon Bars	1	[{"added": {}}]	11	1
16	2024-07-26 07:07:23.314679+00	6	Tiramisu	1	[{"added": {}}]	11	1
17	2024-07-26 07:09:00.973654+00	7	Garlic Butter Shrimp Pasta	1	[{"added": {}}]	11	1
18	2024-07-26 07:10:07.007372+00	8	Chicken Alfredo	1	[{"added": {}}]	11	1
19	2024-07-26 07:13:26.115167+00	9	Vegetarian Stuffed Peppers	1	[{"added": {}}]	11	1
20	2024-07-26 07:15:01.735522+00	10	Baked Sweet Potato Fries	1	[{"added": {}}]	11	1
21	2024-07-26 07:16:24.620231+00	11	Hummus and Veggie Platter	1	[{"added": {}}]	11	1
22	2024-07-26 07:17:28.670955+00	12	Cheesy Spinach Quesadillas	1	[{"added": {}}]	11	1
23	2024-07-26 19:54:47.909339+00	5	ascharyasoni2807@gmail.com	1	[{"added": {}}]	9	1
24	2024-07-26 19:55:01.042232+00	1	ashu2807	1	[{"added": {}}]	13	1
25	2024-07-26 20:44:31.108499+00	1	ashu2807	3		13	1
26	2024-07-26 20:45:03.314557+00	12	Cheesy Spinach Quesadillas	2	[{"changed": {"fields": ["Author"]}}]	11	1
27	2024-07-26 20:45:13.779842+00	2	Chef-Sanjeev	1	[{"added": {}}]	13	1
\.


--
-- Data for Name: django_celery_beat_clockedschedule; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_celery_beat_clockedschedule (id, clocked_time) FROM stdin;
\.


--
-- Data for Name: django_celery_beat_crontabschedule; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_celery_beat_crontabschedule (id, minute, hour, day_of_week, day_of_month, month_of_year, timezone) FROM stdin;
\.


--
-- Data for Name: django_celery_beat_intervalschedule; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_celery_beat_intervalschedule (id, every, period) FROM stdin;
\.


--
-- Data for Name: django_celery_beat_periodictask; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_celery_beat_periodictask (id, name, task, args, kwargs, queue, exchange, routing_key, expires, enabled, last_run_at, total_run_count, date_changed, description, crontab_id, interval_id, solar_id, one_off, start_time, priority, headers, clocked_id, expire_seconds) FROM stdin;
\.


--
-- Data for Name: django_celery_beat_periodictasks; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_celery_beat_periodictasks (ident, last_update) FROM stdin;
\.


--
-- Data for Name: django_celery_beat_solarschedule; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_celery_beat_solarschedule (id, event, latitude, longitude) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	contenttypes	contenttype
5	sessions	session
6	token_blacklist	blacklistedtoken
7	token_blacklist	outstandingtoken
8	django_rest_passwordreset	resetpasswordtoken
9	users	customuser
10	users	profile
11	recipe	recipe
12	recipe	recipecategory
13	recipe	recipelike
14	django_celery_beat	crontabschedule
15	django_celery_beat	intervalschedule
16	django_celery_beat	periodictask
17	django_celery_beat	periodictasks
18	django_celery_beat	solarschedule
19	django_celery_beat	clockedschedule
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2024-07-26 06:04:49.823549+00
2	contenttypes	0002_remove_content_type_name	2024-07-26 06:04:49.826881+00
3	auth	0001_initial	2024-07-26 06:04:49.844278+00
4	auth	0002_alter_permission_name_max_length	2024-07-26 06:04:49.846556+00
5	auth	0003_alter_user_email_max_length	2024-07-26 06:04:49.849114+00
6	auth	0004_alter_user_username_opts	2024-07-26 06:04:49.851767+00
7	auth	0005_alter_user_last_login_null	2024-07-26 06:04:49.854535+00
8	auth	0006_require_contenttypes_0002	2024-07-26 06:04:49.855717+00
9	auth	0007_alter_validators_add_error_messages	2024-07-26 06:04:49.858112+00
10	auth	0008_alter_user_username_max_length	2024-07-26 06:04:49.861039+00
11	auth	0009_alter_user_last_name_max_length	2024-07-26 06:04:49.863436+00
12	auth	0010_alter_group_name_max_length	2024-07-26 06:04:49.866272+00
13	auth	0011_update_proxy_permissions	2024-07-26 06:04:49.869128+00
14	auth	0012_alter_user_first_name_max_length	2024-07-26 06:04:49.871427+00
15	users	0001_initial	2024-07-26 06:04:49.889007+00
16	admin	0001_initial	2024-07-26 06:04:49.897915+00
17	admin	0002_logentry_remove_auto_add	2024-07-26 06:04:49.901349+00
18	admin	0003_logentry_add_action_flag_choices	2024-07-26 06:04:49.904908+00
19	django_rest_passwordreset	0001_initial	2024-07-26 06:04:49.914102+00
20	django_rest_passwordreset	0002_pk_migration	2024-07-26 06:04:49.930851+00
21	django_rest_passwordreset	0003_allow_blank_and_null_fields	2024-07-26 06:04:49.937474+00
22	django_rest_passwordreset	0004_alter_resetpasswordtoken_user_agent	2024-07-26 06:04:49.940947+00
23	recipe	0001_initial	2024-07-26 06:04:49.94626+00
24	recipe	0002_initial	2024-07-26 06:04:49.957698+00
25	recipe	0003_recipelike	2024-07-26 06:04:49.96597+00
26	sessions	0001_initial	2024-07-26 06:04:49.971913+00
27	token_blacklist	0001_initial	2024-07-26 06:04:49.986949+00
28	token_blacklist	0002_outstandingtoken_jti_hex	2024-07-26 06:04:49.991432+00
29	token_blacklist	0003_auto_20171017_2007	2024-07-26 06:04:49.998164+00
30	token_blacklist	0004_auto_20171017_2013	2024-07-26 06:04:50.00616+00
31	token_blacklist	0005_remove_outstandingtoken_jti	2024-07-26 06:04:50.010945+00
32	token_blacklist	0006_auto_20171017_2113	2024-07-26 06:04:50.016566+00
33	token_blacklist	0007_auto_20171017_2214	2024-07-26 06:04:50.028129+00
34	token_blacklist	0008_migrate_to_bigautofield	2024-07-26 06:04:50.046745+00
35	token_blacklist	0010_fix_migrate_to_bigautofield	2024-07-26 06:04:50.05451+00
36	token_blacklist	0011_linearizes_history	2024-07-26 06:04:50.055691+00
37	token_blacklist	0012_alter_outstandingtoken_user	2024-07-26 06:04:50.0602+00
38	users	0002_profile	2024-07-26 06:04:50.08815+00
39	users	0003_rename_favourites_profile_favorites	2024-07-26 06:04:50.092889+00
40	users	0004_alter_profile_user	2024-07-26 06:04:50.097792+00
41	users	0005_auto_20220101_0912	2024-07-26 06:04:50.112565+00
42	users	0006_auto_20220106_2037	2024-07-26 06:04:50.121455+00
43	users	0007_alter_profile_avatar	2024-07-26 06:04:50.126895+00
44	users	0008_alter_profile_avatar	2024-07-26 06:04:50.131347+00
45	users	0009_alter_profile_avatar	2024-07-26 06:04:50.137472+00
46	users	0010_alter_profile_avatar	2024-07-26 06:04:50.141866+00
47	django_celery_beat	0001_initial	2024-07-26 19:37:28.295605+00
48	django_celery_beat	0002_auto_20161118_0346	2024-07-26 19:37:28.30748+00
49	django_celery_beat	0003_auto_20161209_0049	2024-07-26 19:37:28.322055+00
50	django_celery_beat	0004_auto_20170221_0000	2024-07-26 19:37:28.3263+00
51	django_celery_beat	0005_add_solarschedule_events_choices	2024-07-26 19:37:28.32887+00
52	django_celery_beat	0006_auto_20180322_0932	2024-07-26 19:37:28.344419+00
53	django_celery_beat	0007_auto_20180521_0826	2024-07-26 19:37:28.353706+00
54	django_celery_beat	0008_auto_20180914_1922	2024-07-26 19:37:28.367571+00
55	django_celery_beat	0006_auto_20180210_1226	2024-07-26 19:37:28.379822+00
56	django_celery_beat	0006_periodictask_priority	2024-07-26 19:37:28.385664+00
57	django_celery_beat	0009_periodictask_headers	2024-07-26 19:37:28.390832+00
58	django_celery_beat	0010_auto_20190429_0326	2024-07-26 19:37:28.481859+00
59	django_celery_beat	0011_auto_20190508_0153	2024-07-26 19:37:28.491146+00
60	django_celery_beat	0012_periodictask_expire_seconds	2024-07-26 19:37:28.495733+00
61	django_celery_beat	0013_auto_20200609_0727	2024-07-26 19:37:28.500398+00
62	django_celery_beat	0014_remove_clockedschedule_enabled	2024-07-26 19:37:28.502748+00
63	django_celery_beat	0015_edit_solarschedule_events_choices	2024-07-26 19:37:28.50498+00
64	django_celery_beat	0016_alter_crontabschedule_timezone	2024-07-26 19:37:28.509952+00
65	django_celery_beat	0017_alter_crontabschedule_month_of_year	2024-07-26 19:37:28.51458+00
66	django_celery_beat	0018_improve_crontab_helptext	2024-07-26 19:37:28.519075+00
\.


--
-- Data for Name: django_rest_passwordreset_resetpasswordtoken; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_rest_passwordreset_resetpasswordtoken (created_at, key, ip_address, user_agent, user_id, id) FROM stdin;
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
odbjvmzxb47z9vy5adr32gu1qxh1fops	.eJxVjEEOwiAQRe_C2pBSEBiX7j0DmWFAqgaS0q6Md7dNutDtf-_9twi4LiWsPc1hYnERVpx-N8L4THUH_MB6bzK2uswTyV2RB-3y1ji9rof7d1Cwl60esht0hFGdt2Yk5X0ylhWxJg1oADy4rMHnpDJHYKeNNUiMShFEHcXnC-SIOEE:1sXh3N:0yWZwyfK3YgdTazh2xMGobs25BI6rsXBq078oDFw8i8	2024-08-10 13:01:41.959217+00
\.


--
-- Data for Name: recipe_recipe; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recipe_recipe (id, picture, title, "desc", cook_time, ingredients, procedure, created_at, updated_at, author_id, category_id) FROM stdin;
1	uploads/PANCAKE.jpg	Classic Pancakes	Fluffy and golden pancakes, perfect for a cozy breakfast.	06:00:00	1 cup all-purpose flour\r\n2 tablespoons sugar\r\n1 teaspoon baking powder\r\n1/2 teaspoon baking soda\r\n1/4 teaspoon salt\r\n1 cup buttermilk\r\n1 large egg\r\n2 tablespoons melted butter\r\n1 teaspoon vanilla extract\r\nButter or oil for cooking	Mix Dry Ingredients: In a large bowl, whisk together the flour, sugar, baking powder, baking soda, and salt.\r\nCombine Wet Ingredients: In a separate bowl, whisk together the buttermilk, egg, melted butter, and vanilla extract.\r\nMake Batter: Pour the wet ingredients into the dry ingredients and stir until just combined. Do not overmix; the batter should be slightly lumpy.\r\nCook Pancakes: Heat a non-stick skillet or griddle over medium heat and lightly grease with butter or oil. Pour 1/4 cup of batter onto the skillet for each pancake. Cook until bubbles form on the surface, then flip and cook until golden brown on both sides.\r\nServe: Serve warm with your favorite toppings such as maple syrup, fresh berries, or whipped cream.	2024-07-26 06:54:15.920462+00	2024-07-26 06:54:15.920483+00	1	1
2	uploads/toast.jpeg	Avocado Toast with Poached Egg	A delicious and nutritious avocado toast topped with a perfectly poached egg.	06:00:00	2 slices of whole grain bread\r\n1 ripe avocado\r\n1 tablespoon lemon juice\r\nSalt and pepper to taste\r\n2 eggs\r\n1 tablespoon white vinegar\r\nRed pepper flakes (optional)\r\nFresh herbs (optional, e.g., cilantro or parsley)	Prepare Avocado Spread: Mash the avocado in a bowl and mix with lemon juice, salt, and pepper.\r\nToast Bread: Toast the slices of bread to your desired level of crispiness.\r\nPoach Eggs: Fill a small saucepan with water and bring to a simmer. Add white vinegar. Crack each egg into a small bowl and gently slide into the simmering water. Poach for about 3-4 minutes, until the whites are set but the yolks are still runny.\r\nAssemble Toast: Spread the avocado mixture evenly on each slice of toast. Place a poached egg on top of each.\r\nGarnish and Serve: Sprinkle with red pepper flakes and fresh herbs, if using. Serve immediately.	2024-07-26 06:55:55.631816+00	2024-07-26 06:55:55.631833+00	1	1
3	uploads/berry.jpeg	Berry Smoothie Bowl	A vibrant and refreshing smoothie bowl packed with berries and topped with nutritious add-ins.	06:00:00	1 cup frozen mixed berries (strawberries, blueberries, raspberries)\r\n1 banana\r\n1/2 cup Greek yogurt\r\n1/2 cup almond milk (or any milk of choice)\r\n1 tablespoon honey or maple syrup (optional)\r\nToppings: granola, fresh berries, chia seeds, coconut flakes, sliced almonds, etc.	Blend Smoothie: In a blender, combine the frozen berries, banana, Greek yogurt, almond milk, and honey or maple syrup. Blend until smooth and thick.\r\nPour into Bowl: Pour the smoothie mixture into a bowl.\r\nAdd Toppings: Top with your favorite toppings such as granola, fresh berries, chia seeds, coconut flakes, and sliced almonds.\r\nServe: Enjoy immediately with a spoon.	2024-07-26 06:57:17.006232+00	2024-07-26 06:57:17.006242+00	1	1
4	uploads/lava_cake.jpeg	Chocolate Lava Cake	A rich and decadent chocolate cake with a gooey molten center.	12:00:00	1/2 cup unsalted butter\r\n4 ounces semi-sweet chocolate, chopped\r\n1 cup powdered sugar\r\n2 large eggs\r\n2 large egg yolks\r\n1 teaspoon vanilla extract\r\n1/2 cup all-purpose flour\r\nPinch of salt\r\nButter and cocoa powder for greasing ramekins	Prepare Ramekins: Preheat the oven to 425°F (220°C). Grease four 6-ounce ramekins with butter and dust with cocoa powder.\r\nMelt Butter and Chocolate: In a microwave-safe bowl, melt the butter and chocolate together, stirring until smooth.\r\nMix Ingredients: Stir in the powdered sugar until combined. Add the eggs, egg yolks, and vanilla extract, and mix well. Finally, stir in the flour and salt until just combined.\r\nFill Ramekins: Divide the batter evenly among the prepared ramekins.\r\nBake: Bake for 12-14 minutes, until the edges are set but the center is still soft. Remove from the oven and let sit for 1 minute.\r\nServe: Carefully invert each ramekin onto a plate and serve warm, optionally with a scoop of vanilla ice cream or a dusting of powdered sugar.	2024-07-26 07:04:10.944622+00	2024-07-26 07:04:10.944667+00	3	7
5	uploads/lemon-bars.jpg	Lemon Bars	Tangy and sweet lemon bars with a buttery shortbread crust.	12:00:00	1 cup unsalted butter, softened\r\n1/2 cup granulated sugar\r\n2 cups all-purpose flour\r\nPinch of salt\r\n1 1/2 cups granulated sugar\r\n1/4 cup all-purpose flour\r\n4 large eggs\r\n2/3 cup fresh lemon juice (about 3-4 lemons)\r\n1 tablespoon lemon zest	Prepare Crust: Preheat the oven to 350°F (175°C). In a medium bowl, cream together the butter and sugar. Add the flour and salt and mix until well combined. Press the mixture into the bottom of a greased 9x13-inch baking dish.\r\nBake Crust: Bake for 15-20 minutes, until lightly golden.\r\nMake Filling: In a separate bowl, whisk together the sugar and flour. Add the eggs, lemon juice, and lemon zest, and whisk until smooth.\r\nBake Filling: Pour the filling over the pre-baked crust and bake for an additional 20-25 minutes, until the filling is set.\r\nCool and Serve: Let the lemon bars cool completely, then cut into squares and dust with powdered sugar before serving.	2024-07-26 07:05:46.157413+00	2024-07-26 07:05:46.15744+00	4	7
6	uploads/tiramisu.webp	Tiramisu	A classic Italian dessert with layers of coffee-soaked ladyfingers and a creamy mascarpone filling.	12:00:00	6 large egg yolks\r\n3/4 cup granulated sugar\r\n1 cup mascarpone cheese\r\n1 1/2 cups heavy cream\r\n2 cups brewed espresso or strong coffee, cooled\r\n1/4 cup coffee liqueur (optional)\r\n1 teaspoon vanilla extract\r\n24-30 ladyfingers (savoiardi)\r\nCocoa powder for dusting	Prepare Filling: In a heatproof bowl, whisk together the egg yolks and sugar. Place over a pot of simmering water and cook, whisking constantly, until the mixture is thick and pale. Remove from heat and let cool slightly, then whisk in the mascarpone cheese until smooth.\r\nWhip Cream: In a separate bowl, whip the heavy cream and vanilla extract until stiff peaks form. Gently fold the whipped cream into the mascarpone mixture.\r\nDip Ladyfingers: In a shallow dish, combine the espresso and coffee liqueur (if using). Quickly dip each ladyfinger into the coffee mixture, ensuring they are moistened but not soggy.\r\nAssemble Tiramisu: In a 9x13-inch dish, arrange a layer of dipped ladyfingers. Spread half of the mascarpone filling over the ladyfingers. Repeat with another layer of dipped ladyfingers and the remaining mascarpone filling.\r\nChill: Cover and refrigerate for at least 4 hours, or overnight.\r\nServe: Dust with cocoa powder before serving.	2024-07-26 07:07:23.312534+00	2024-07-26 07:07:23.31256+00	4	7
7	uploads/Shrimp-pasta-cooking-2.webp	Garlic Butter Shrimp Pasta	A flavorful and easy pasta dish with succulent shrimp and a garlic butter sauce.	18:00:00	8 ounces linguine or spaghetti\r\n1 pound large shrimp, peeled and deveined\r\n3 tablespoons unsalted butter\r\n4 cloves garlic, minced\r\n1/4 teaspoon red pepper flakes\r\n1/4 cup white wine (optional)\r\n1 lemon, juiced\r\n1/4 cup chopped fresh parsley\r\nSalt and pepper to taste	Cook Pasta: Cook the pasta according to package instructions. Drain and set aside.\r\nCook Shrimp: In a large skillet, melt 2 tablespoons of butter over medium heat. Add the shrimp and cook until pink, about 2-3 minutes per side. Remove the shrimp and set aside.\r\nMake Sauce: In the same skillet, add the remaining 1 tablespoon of butter. Add the garlic and red pepper flakes, and cook until fragrant, about 1 minute. Add the white wine (if using) and lemon juice, and cook for another 1-2 minutes.\r\nCombine and Serve: Add the cooked pasta and shrimp back to the skillet. Toss to coat in the sauce. Season with salt and pepper, and sprinkle with fresh parsley. Serve immediately.	2024-07-26 07:09:00.971293+00	2024-07-26 07:09:00.971316+00	3	5
8	uploads/Chicken-Alfredo-bowl.jpg	Chicken Alfredo	A creamy and comforting pasta dish with tender chicken and rich Alfredo sauce.	12:00:00	2 boneless, skinless chicken breasts\r\nSalt and pepper to taste\r\n2 tablespoons olive oil\r\n8 ounces fettuccine\r\n1 cup heavy cream\r\n1/2 cup grated Parmesan cheese\r\n3 cloves garlic, minced\r\n2 tablespoons unsalted butter\r\n1/4 teaspoon nutmeg (optional)\r\nFresh parsley, chopped (for garnish)	Cook Chicken: Season the chicken breasts with salt and pepper. In a large skillet, heat the olive oil over medium-high heat. Add the chicken and cook until golden brown and cooked through, about 5-7 minutes per side. Remove and let rest before slicing.\r\nCook Pasta: Cook the fettuccine according to package instructions. Drain and set aside.\r\nMake Sauce: In the same skillet, melt the butter over medium heat. Add the garlic and cook until fragrant, about 1 minute. Stir in the heavy cream and bring to a simmer. Add the Parmesan cheese and nutmeg (if using), and stir until the sauce thickens.\r\nCombine and Serve: Add the cooked pasta and sliced chicken to the skillet. Toss to coat in the Alfredo sauce. Garnish with fresh parsley and serve immediately.	2024-07-26 07:10:07.003893+00	2024-07-26 07:10:07.00391+00	3	5
9	uploads/veg-pepper.jpeg	Vegetarian Stuffed Peppers	Colorful bell peppers stuffed with a hearty mixture of rice, beans, and vegetables.	12:00:00	4 large bell peppers (any color)\r\n1 cup cooked rice\r\n1 can (15 ounces) black beans, drained and rinsed\r\n1 cup corn kernels (fresh or frozen)\r\n1/2 cup diced tomatoes\r\n1/2 cup shredded cheese (cheddar, mozzarella, or your choice)\r\n1 teaspoon cumin\r\n1 teaspoon chili powder\r\nSalt and pepper to taste\r\nFresh cilantro, chopped (for garnish)	Prepare Peppers: Preheat the oven to 375°F (190°C). Cut the tops off the bell peppers and remove the seeds and membranes. Place the peppers in a baking dish.\r\nMake Filling: In a large bowl, combine the cooked rice, black beans, corn, diced tomatoes, shredded cheese, cumin, chili powder, salt, and pepper. Mix well.\r\nStuff Peppers: Spoon the filling into the prepared bell peppers, packing it down slightly.\r\nBake: Cover the baking dish with foil and bake for 30 minutes. Remove the foil and bake for an additional 10-15 minutes, until the peppers are tender and the filling is heated through.\r\nServe: Garnish with chopped cilantro and serve hot.	2024-07-26 07:13:26.110428+00	2024-07-26 07:13:26.110461+00	3	5
10	uploads/Baked-Sweet-Potato-Fries-Recipe.jpg	Baked Sweet Potato Fries	Crispy and healthy sweet potato fries seasoned with herbs and spices.	16:00:00	2 large sweet potatoes\r\n2 tablespoons olive oil\r\n1 teaspoon paprika\r\n1 teaspoon garlic powder\r\n1/2 teaspoon salt\r\n1/2 teaspoon black pepper\r\nFresh parsley, chopped (for garnish)	Prepare Oven: Preheat the oven to 425°F (220°C). Line a baking sheet with parchment paper.\r\nCut Sweet Potatoes: Peel the sweet potatoes and cut them into thin fries.\r\nSeason Fries: In a large bowl, toss the sweet potato fries with olive oil, paprika, garlic powder, salt, and pepper.\r\nBake: Spread the fries in a single layer on the prepared baking sheet. Bake for 20-25 minutes, turning halfway through, until crispy and golden brown.\r\nServe: Garnish with chopped parsley and serve with your favorite dipping sauce.	2024-07-26 07:15:01.733635+00	2024-07-26 07:15:01.733645+00	2	3
11	uploads/hummus-vegetable-board-5-of-10.jpg	Hummus and Veggie Platter	A healthy and colorful snack platter with homemade hummus and fresh vegetables.	16:00:00	1 can (15 ounces) chickpeas, drained and rinsed\r\n1/4 cup tahini\r\n2 tablespoons olive oil\r\n2 cloves garlic\r\n2 tablespoons lemon juice\r\n1/2 teaspoon cumin\r\nSalt to taste\r\nWater (as needed)\r\n\r\n\r\nCarrot sticks\r\nCucumber slices\r\nBell pepper strips\r\nCherry tomatoes\r\nCelery sticks	Make Hummus: In a food processor, combine the chickpeas, tahini, olive oil, garlic, lemon juice, cumin, and salt. Blend until smooth, adding water as needed to reach the desired consistency.\r\nPrepare Veggies: Wash and cut the vegetables into sticks or slices.\r\nAssemble Platter: Arrange the veggies on a platter around a bowl of hummus.\r\nServe: Serve immediately or refrigerate until ready to eat.	2024-07-26 07:16:24.618626+00	2024-07-26 07:16:24.618638+00	2	3
12	uploads/Spinach-Quesadilla-Recipe-Image.jpg	Cheesy Spinach Quesadillas	Golden quesadillas filled with melted cheese and sautéed spinach.	16:00:00	4 large flour tortillas\r\n2 cups fresh spinach, chopped\r\n1 cup shredded mozzarella cheese\r\n1 cup shredded cheddar cheese\r\n1 tablespoon olive oil\r\n1 clove garlic, minced\r\nSalt and pepper to taste\r\nSalsa and sour cream for serving	Sauté Spinach: In a skillet, heat the olive oil over medium heat. Add the garlic and sauté until fragrant. Add the spinach and cook until wilted. Season with salt and pepper.\r\nAssemble Quesadillas: Place a tortilla in a large skillet over medium heat. Sprinkle 1/4 cup of mozzarella and 1/4 cup of cheddar cheese over half of the tortilla. Top with sautéed spinach and fold the tortilla over.\r\nCook Quesadillas: Cook for 2-3 minutes on each side, until the tortilla is golden brown and the cheese is melted. Repeat with the remaining tortillas.\r\nServe: Cut the quesadillas into wedges and serve with salsa and sour cream.	2024-07-26 07:17:28.669151+00	2024-07-26 20:45:03.311755+00	5	3
\.


--
-- Data for Name: recipe_recipecategory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recipe_recipecategory (id, name) FROM stdin;
1	Breakfast
2	Lunch
3	Snacks
4	Appetizer
5	Dinner
6	Soup
7	Dessert
\.


--
-- Data for Name: recipe_recipelike; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.recipe_recipelike (id, created, recipe_id, user_id) FROM stdin;
2	2024-07-26 20:45:13.778681+00	12	3
\.


--
-- Data for Name: token_blacklist_blacklistedtoken; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.token_blacklist_blacklistedtoken (id, blacklisted_at, token_id) FROM stdin;
\.


--
-- Data for Name: token_blacklist_outstandingtoken; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.token_blacklist_outstandingtoken (id, token, created_at, expires_at, user_id, jti) FROM stdin;
\.


--
-- Data for Name: users_customuser; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users_customuser (id, password, last_login, is_superuser, username, first_name, last_name, is_staff, is_active, date_joined, email) FROM stdin;
1	pbkdf2_sha256$600000$iBiojnqtwEeGVuu6hy5lHq$NSrL3dNIGXZs2n38R9kR6EFIpeBUZf3ljERSZheirn4=	2024-07-26 06:08:00.660434+00	t	ashu			t	t	2024-07-26 06:07:45.551032+00	ashu@gmail.com
2	pbkdf2_sha256$600000$TVnjYyKNAOuv9pAHLdsuW4$A+ZbbifR1YVsnq1w+eb4ZtAt3K5dp6vBF67yxc+Vx0c=	\N	f	Chef-Ascharya			t	t	2024-07-26 06:59:00.254236+00	ascharya@gmail.com
3	pbkdf2_sha256$600000$ZiNlY5v3N6WH4MGOnA0rwx$AmtoluhXnNdwEYsVd/z3QU9JEd9wqD37KR7I6IqKQ8k=	\N	f	Chef-Sanjeev			t	t	2024-07-26 06:59:49.509938+00	sanjeev@gmail.com
4	pbkdf2_sha256$600000$VJGB9msa9sMb7WSieVXoB2$OPtETWwGzWmrqv8eJKsne4NKHsd1fYYSj2+H5dx6KOY=	\N	f	Chef-Vikas			t	t	2024-07-26 07:00:28.3622+00	vikas@gmail.com
5	pbkdf2_sha256$600000$uiEFIKwv7Ztc03hW52ccFc$jibnb9g83WNg/lztDU5yRfqHxYGfMfDaNJDMqzzAUI8=	\N	f	ashu2807			t	t	2024-07-26 19:54:47.624257+00	ascharyasoni2807@gmail.com
6	pbkdf2_sha256$600000$X0Gv7KAP1qcrqXFFgV1mgU$IBY4YklhQ2GozoucrGuMl31kr2FwceAYwik48LLkEQk=	2024-07-27 13:01:41.955836+00	t	test			t	t	2024-07-27 13:01:20.323622+00	test@test.com
\.


--
-- Data for Name: users_customuser_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users_customuser_groups (id, customuser_id, group_id) FROM stdin;
\.


--
-- Data for Name: users_customuser_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users_customuser_user_permissions (id, customuser_id, permission_id) FROM stdin;
\.


--
-- Data for Name: users_profile; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users_profile (id, user_id, avatar, bio) FROM stdin;
1	1		
2	2		
3	3		
4	4		
5	5		
6	6		
\.


--
-- Data for Name: users_profile_bookmarks; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users_profile_bookmarks (id, profile_id, recipe_id) FROM stdin;
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 76, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 27, true);


--
-- Name: django_celery_beat_clockedschedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_celery_beat_clockedschedule_id_seq', 1, false);


--
-- Name: django_celery_beat_crontabschedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_celery_beat_crontabschedule_id_seq', 1, false);


--
-- Name: django_celery_beat_intervalschedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_celery_beat_intervalschedule_id_seq', 1, false);


--
-- Name: django_celery_beat_periodictask_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_celery_beat_periodictask_id_seq', 1, false);


--
-- Name: django_celery_beat_solarschedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_celery_beat_solarschedule_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 19, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 66, true);


--
-- Name: django_rest_passwordreset_resetpasswordtoken_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_rest_passwordreset_resetpasswordtoken_id_seq', 1, false);


--
-- Name: recipe_recipe_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.recipe_recipe_id_seq', 12, true);


--
-- Name: recipe_recipecategory_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.recipe_recipecategory_id_seq', 7, true);


--
-- Name: recipe_recipelike_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.recipe_recipelike_id_seq', 2, true);


--
-- Name: token_blacklist_blacklistedtoken_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.token_blacklist_blacklistedtoken_id_seq', 1, false);


--
-- Name: token_blacklist_outstandingtoken_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.token_blacklist_outstandingtoken_id_seq', 1, false);


--
-- Name: users_customuser_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_customuser_groups_id_seq', 1, false);


--
-- Name: users_customuser_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_customuser_id_seq', 6, true);


--
-- Name: users_customuser_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_customuser_user_permissions_id_seq', 1, false);


--
-- Name: users_profile_bookmarks_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_profile_bookmarks_id_seq', 1, false);


--
-- Name: users_profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_profile_id_seq', 6, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_celery_beat_clockedschedule django_celery_beat_clockedschedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_clockedschedule
    ADD CONSTRAINT django_celery_beat_clockedschedule_pkey PRIMARY KEY (id);


--
-- Name: django_celery_beat_crontabschedule django_celery_beat_crontabschedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_crontabschedule
    ADD CONSTRAINT django_celery_beat_crontabschedule_pkey PRIMARY KEY (id);


--
-- Name: django_celery_beat_intervalschedule django_celery_beat_intervalschedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_intervalschedule
    ADD CONSTRAINT django_celery_beat_intervalschedule_pkey PRIMARY KEY (id);


--
-- Name: django_celery_beat_periodictask django_celery_beat_periodictask_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_periodictask_name_key UNIQUE (name);


--
-- Name: django_celery_beat_periodictask django_celery_beat_periodictask_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_periodictask_pkey PRIMARY KEY (id);


--
-- Name: django_celery_beat_periodictasks django_celery_beat_periodictasks_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictasks
    ADD CONSTRAINT django_celery_beat_periodictasks_pkey PRIMARY KEY (ident);


--
-- Name: django_celery_beat_solarschedule django_celery_beat_solar_event_latitude_longitude_ba64999a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_solarschedule
    ADD CONSTRAINT django_celery_beat_solar_event_latitude_longitude_ba64999a_uniq UNIQUE (event, latitude, longitude);


--
-- Name: django_celery_beat_solarschedule django_celery_beat_solarschedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_solarschedule
    ADD CONSTRAINT django_celery_beat_solarschedule_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_rest_passwordreset_resetpasswordtoken django_rest_passwordreset_resetpasswordtoken_key_f1b65873_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_rest_passwordreset_resetpasswordtoken
    ADD CONSTRAINT django_rest_passwordreset_resetpasswordtoken_key_f1b65873_uniq UNIQUE (key);


--
-- Name: django_rest_passwordreset_resetpasswordtoken django_rest_passwordreset_resetpasswordtoken_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_rest_passwordreset_resetpasswordtoken
    ADD CONSTRAINT django_rest_passwordreset_resetpasswordtoken_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: recipe_recipe recipe_recipe_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recipe_recipe
    ADD CONSTRAINT recipe_recipe_pkey PRIMARY KEY (id);


--
-- Name: recipe_recipecategory recipe_recipecategory_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recipe_recipecategory
    ADD CONSTRAINT recipe_recipecategory_pkey PRIMARY KEY (id);


--
-- Name: recipe_recipelike recipe_recipelike_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recipe_recipelike
    ADD CONSTRAINT recipe_recipelike_pkey PRIMARY KEY (id);


--
-- Name: token_blacklist_blacklistedtoken token_blacklist_blacklistedtoken_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.token_blacklist_blacklistedtoken
    ADD CONSTRAINT token_blacklist_blacklistedtoken_pkey PRIMARY KEY (id);


--
-- Name: token_blacklist_blacklistedtoken token_blacklist_blacklistedtoken_token_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.token_blacklist_blacklistedtoken
    ADD CONSTRAINT token_blacklist_blacklistedtoken_token_id_key UNIQUE (token_id);


--
-- Name: token_blacklist_outstandingtoken token_blacklist_outstandingtoken_jti_hex_d9bdf6f7_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.token_blacklist_outstandingtoken
    ADD CONSTRAINT token_blacklist_outstandingtoken_jti_hex_d9bdf6f7_uniq UNIQUE (jti);


--
-- Name: token_blacklist_outstandingtoken token_blacklist_outstandingtoken_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.token_blacklist_outstandingtoken
    ADD CONSTRAINT token_blacklist_outstandingtoken_pkey PRIMARY KEY (id);


--
-- Name: users_customuser users_customuser_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser
    ADD CONSTRAINT users_customuser_email_key UNIQUE (email);


--
-- Name: users_customuser_groups users_customuser_groups_customuser_id_group_id_76b619e3_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser_groups
    ADD CONSTRAINT users_customuser_groups_customuser_id_group_id_76b619e3_uniq UNIQUE (customuser_id, group_id);


--
-- Name: users_customuser_groups users_customuser_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser_groups
    ADD CONSTRAINT users_customuser_groups_pkey PRIMARY KEY (id);


--
-- Name: users_customuser users_customuser_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser
    ADD CONSTRAINT users_customuser_pkey PRIMARY KEY (id);


--
-- Name: users_customuser_user_permissions users_customuser_user_pe_customuser_id_permission_7a7debf6_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser_user_permissions
    ADD CONSTRAINT users_customuser_user_pe_customuser_id_permission_7a7debf6_uniq UNIQUE (customuser_id, permission_id);


--
-- Name: users_customuser_user_permissions users_customuser_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser_user_permissions
    ADD CONSTRAINT users_customuser_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: users_customuser users_customuser_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser
    ADD CONSTRAINT users_customuser_username_key UNIQUE (username);


--
-- Name: users_profile_bookmarks users_profile_bookmarks_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_profile_bookmarks
    ADD CONSTRAINT users_profile_bookmarks_pkey PRIMARY KEY (id);


--
-- Name: users_profile_bookmarks users_profile_bookmarks_profile_id_recipe_id_7428f20a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_profile_bookmarks
    ADD CONSTRAINT users_profile_bookmarks_profile_id_recipe_id_7428f20a_uniq UNIQUE (profile_id, recipe_id);


--
-- Name: users_profile users_profile_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_profile
    ADD CONSTRAINT users_profile_pkey PRIMARY KEY (id);


--
-- Name: users_profile users_profile_user_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_profile
    ADD CONSTRAINT users_profile_user_id_key UNIQUE (user_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_celery_beat_periodictask_clocked_id_47a69f82; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_celery_beat_periodictask_clocked_id_47a69f82 ON public.django_celery_beat_periodictask USING btree (clocked_id);


--
-- Name: django_celery_beat_periodictask_crontab_id_d3cba168; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_celery_beat_periodictask_crontab_id_d3cba168 ON public.django_celery_beat_periodictask USING btree (crontab_id);


--
-- Name: django_celery_beat_periodictask_interval_id_a8ca27da; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_celery_beat_periodictask_interval_id_a8ca27da ON public.django_celery_beat_periodictask USING btree (interval_id);


--
-- Name: django_celery_beat_periodictask_name_265a36b7_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_celery_beat_periodictask_name_265a36b7_like ON public.django_celery_beat_periodictask USING btree (name varchar_pattern_ops);


--
-- Name: django_celery_beat_periodictask_solar_id_a87ce72c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_celery_beat_periodictask_solar_id_a87ce72c ON public.django_celery_beat_periodictask USING btree (solar_id);


--
-- Name: django_rest_passwordreset_resetpasswordtoken_key_f1b65873_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_rest_passwordreset_resetpasswordtoken_key_f1b65873_like ON public.django_rest_passwordreset_resetpasswordtoken USING btree (key varchar_pattern_ops);


--
-- Name: django_rest_passwordreset_resetpasswordtoken_user_id_e8015b11; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_rest_passwordreset_resetpasswordtoken_user_id_e8015b11 ON public.django_rest_passwordreset_resetpasswordtoken USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: recipe_recipe_author_id_76879012; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX recipe_recipe_author_id_76879012 ON public.recipe_recipe USING btree (author_id);


--
-- Name: recipe_recipe_category_id_1b058e66; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX recipe_recipe_category_id_1b058e66 ON public.recipe_recipe USING btree (category_id);


--
-- Name: recipe_recipelike_recipe_id_f15c1a1e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX recipe_recipelike_recipe_id_f15c1a1e ON public.recipe_recipelike USING btree (recipe_id);


--
-- Name: recipe_recipelike_user_id_c8fd96a1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX recipe_recipelike_user_id_c8fd96a1 ON public.recipe_recipelike USING btree (user_id);


--
-- Name: token_blacklist_outstandingtoken_jti_hex_d9bdf6f7_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX token_blacklist_outstandingtoken_jti_hex_d9bdf6f7_like ON public.token_blacklist_outstandingtoken USING btree (jti varchar_pattern_ops);


--
-- Name: token_blacklist_outstandingtoken_user_id_83bc629a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX token_blacklist_outstandingtoken_user_id_83bc629a ON public.token_blacklist_outstandingtoken USING btree (user_id);


--
-- Name: users_customuser_email_6445acef_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_customuser_email_6445acef_like ON public.users_customuser USING btree (email varchar_pattern_ops);


--
-- Name: users_customuser_groups_customuser_id_958147bf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_customuser_groups_customuser_id_958147bf ON public.users_customuser_groups USING btree (customuser_id);


--
-- Name: users_customuser_groups_group_id_01390b14; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_customuser_groups_group_id_01390b14 ON public.users_customuser_groups USING btree (group_id);


--
-- Name: users_customuser_user_permissions_customuser_id_5771478b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_customuser_user_permissions_customuser_id_5771478b ON public.users_customuser_user_permissions USING btree (customuser_id);


--
-- Name: users_customuser_user_permissions_permission_id_baaa2f74; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_customuser_user_permissions_permission_id_baaa2f74 ON public.users_customuser_user_permissions USING btree (permission_id);


--
-- Name: users_customuser_username_80452fdf_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_customuser_username_80452fdf_like ON public.users_customuser USING btree (username varchar_pattern_ops);


--
-- Name: users_profile_bookmarks_profile_id_d35be3e8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_profile_bookmarks_profile_id_d35be3e8 ON public.users_profile_bookmarks USING btree (profile_id);


--
-- Name: users_profile_bookmarks_recipe_id_6c96ee73; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX users_profile_bookmarks_recipe_id_6c96ee73 ON public.users_profile_bookmarks USING btree (recipe_id);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_users_customuser_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_users_customuser_id FOREIGN KEY (user_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_celery_beat_periodictask django_celery_beat_p_clocked_id_47a69f82_fk_django_ce; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_p_clocked_id_47a69f82_fk_django_ce FOREIGN KEY (clocked_id) REFERENCES public.django_celery_beat_clockedschedule(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_celery_beat_periodictask django_celery_beat_p_crontab_id_d3cba168_fk_django_ce; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_p_crontab_id_d3cba168_fk_django_ce FOREIGN KEY (crontab_id) REFERENCES public.django_celery_beat_crontabschedule(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_celery_beat_periodictask django_celery_beat_p_interval_id_a8ca27da_fk_django_ce; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_p_interval_id_a8ca27da_fk_django_ce FOREIGN KEY (interval_id) REFERENCES public.django_celery_beat_intervalschedule(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_celery_beat_periodictask django_celery_beat_p_solar_id_a87ce72c_fk_django_ce; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_celery_beat_periodictask
    ADD CONSTRAINT django_celery_beat_p_solar_id_a87ce72c_fk_django_ce FOREIGN KEY (solar_id) REFERENCES public.django_celery_beat_solarschedule(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_rest_passwordreset_resetpasswordtoken django_rest_password_user_id_e8015b11_fk_users_cus; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_rest_passwordreset_resetpasswordtoken
    ADD CONSTRAINT django_rest_password_user_id_e8015b11_fk_users_cus FOREIGN KEY (user_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: recipe_recipe recipe_recipe_author_id_76879012_fk_users_customuser_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recipe_recipe
    ADD CONSTRAINT recipe_recipe_author_id_76879012_fk_users_customuser_id FOREIGN KEY (author_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: recipe_recipe recipe_recipe_category_id_1b058e66_fk_recipe_recipecategory_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recipe_recipe
    ADD CONSTRAINT recipe_recipe_category_id_1b058e66_fk_recipe_recipecategory_id FOREIGN KEY (category_id) REFERENCES public.recipe_recipecategory(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: recipe_recipelike recipe_recipelike_recipe_id_f15c1a1e_fk_recipe_recipe_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recipe_recipelike
    ADD CONSTRAINT recipe_recipelike_recipe_id_f15c1a1e_fk_recipe_recipe_id FOREIGN KEY (recipe_id) REFERENCES public.recipe_recipe(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: recipe_recipelike recipe_recipelike_user_id_c8fd96a1_fk_users_customuser_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.recipe_recipelike
    ADD CONSTRAINT recipe_recipelike_user_id_c8fd96a1_fk_users_customuser_id FOREIGN KEY (user_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: token_blacklist_blacklistedtoken token_blacklist_blacklistedtoken_token_id_3cc7fe56_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.token_blacklist_blacklistedtoken
    ADD CONSTRAINT token_blacklist_blacklistedtoken_token_id_3cc7fe56_fk FOREIGN KEY (token_id) REFERENCES public.token_blacklist_outstandingtoken(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: token_blacklist_outstandingtoken token_blacklist_outs_user_id_83bc629a_fk_users_cus; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.token_blacklist_outstandingtoken
    ADD CONSTRAINT token_blacklist_outs_user_id_83bc629a_fk_users_cus FOREIGN KEY (user_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_customuser_groups users_customuser_gro_customuser_id_958147bf_fk_users_cus; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser_groups
    ADD CONSTRAINT users_customuser_gro_customuser_id_958147bf_fk_users_cus FOREIGN KEY (customuser_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_customuser_groups users_customuser_groups_group_id_01390b14_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser_groups
    ADD CONSTRAINT users_customuser_groups_group_id_01390b14_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_customuser_user_permissions users_customuser_use_customuser_id_5771478b_fk_users_cus; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser_user_permissions
    ADD CONSTRAINT users_customuser_use_customuser_id_5771478b_fk_users_cus FOREIGN KEY (customuser_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_customuser_user_permissions users_customuser_use_permission_id_baaa2f74_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_customuser_user_permissions
    ADD CONSTRAINT users_customuser_use_permission_id_baaa2f74_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_profile_bookmarks users_profile_bookmarks_profile_id_d35be3e8_fk_users_profile_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_profile_bookmarks
    ADD CONSTRAINT users_profile_bookmarks_profile_id_d35be3e8_fk_users_profile_id FOREIGN KEY (profile_id) REFERENCES public.users_profile(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_profile_bookmarks users_profile_bookmarks_recipe_id_6c96ee73_fk_recipe_recipe_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_profile_bookmarks
    ADD CONSTRAINT users_profile_bookmarks_recipe_id_6c96ee73_fk_recipe_recipe_id FOREIGN KEY (recipe_id) REFERENCES public.recipe_recipe(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: users_profile users_profile_user_id_2112e78d_fk_users_customuser_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users_profile
    ADD CONSTRAINT users_profile_user_id_2112e78d_fk_users_customuser_id FOREIGN KEY (user_id) REFERENCES public.users_customuser(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

